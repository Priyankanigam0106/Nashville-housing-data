SELECT * FROM housecleaningproject.`nashvillehousing`;

/* 
Cleaning  data using MySQL Queries
*/

-- Populate Property Address data
SELECT a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress
FROM housecleaningproject.`nashville housing data for data cleaning` a
JOIN housecleaningproject.`nashville housing data for data cleaning` b
ON a.ParcelID=b.ParcelID
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress is null;

-- Breaking Out Address into individual columns(ddress,city,state)

SELECT PropertyAddress
FROM housecleaningproject.`nashvillehousing`;

SELECT 
substring_index(PropertyAddress,',',+1) as Address,
substring_Index(PropertyAddress,',',-1)as City
FROM housecleaningproject.`nashvillehousing`;

ALTER TABLE NashvilleHousing
Add PropertySplitAddress char(255);

Update NashvilleHousing
SET PropertySplitAddress = substring_index(PropertyAddress,',',+1);

ALTER TABLE NashvilleHousing
Add PropertySplitCity char(255);

Update NashvilleHousing
SET PropertySplitCity = substring_Index(PropertyAddress,',',-1);

SELECT OwnerAddress
 FROM housecleaningproject.`nashvillehousing`;
 
 SELECT
 substring_index(OwnerAddress,',',-1) as ownerstate
 FROM housecleaningproject.`nashvillehousing`;
 
 SELECT 
 substring_index(OwnerAddress,',',+1) as owneraddress
 FROM housecleaningproject.`nashvillehousing`;
 
 SELECT 
 substring_index(OwnerAddress,' ',-2) as ownercity
 FROM housecleaningproject.`nashvillehousing`;

ALTER TABLE NashvilleHousing
Add OwnerSplitAddress char(255);

Update NashvilleHousing
SET OwnerSplitAddress = substring_index(OwnerAddress,',',+1) ;

ALTER TABLE NashvilleHousing
Add  OwnerSplitCity char(255);

Update NashvilleHousing
SET OwnerSplitCity =  substring_index(OwnerAddress,' ',-2);

ALTER TABLE NashvilleHousing
Add  OwnerSplitState char(255);

Update NashvilleHousing
SET OwnerSplitState = substring_index(OwnerAddress,',',-1);

SELECT * FROM housecleaningproject.`nashvillehousing`;

-- Chane Y and N to yes and no in "sold as vacant" field

SELECT DISTINCT(SoldAsVacant) ,COUNT(SoldAsVacant)
FROM
    housecleaningproject.`nashvillehousing`
GROUP BY SoldAsVacant
ORDER BY 2;

SELECT SoldAsVacant,
CASE WHEN SoldAsVacant ='Y' THEN 'Yes'
     WHEN SoldAsVacant = 'N' THEN 'No'
     ELSE SoldAsVacant
     END
 FROM housecleaningproject.`nashvillehousing`;
    
UPDATE nashvillehousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'N' THEN 'No'
                         WHEN SoldAsVacant= 'Y' THEN 'Yes'
						ELSE SoldAsVacant
                        END;                    

-- Remove Duplicates

WITH RownumCTE AS (
 SELECT *,ROW_NUMBER() OVER(
 PARTITION BY ParcelID,PropertyAddress,SalePrice,SaleDate,LegalReference
 ORDER BY UniqueID)row_num
 FROM housecleaningproject.`nashvillehousing`
 ORDER BY ParcelID)
 SELECT * FROM RownumCTE
WHERE row_num > 1
ORDER BY PropertyAddress;

-- DELETE unused Columns

SELECT *
  FROM housecleaningproject.`nashvillehousing`;
  
  ALTER TABLE housecleaningproject.`NashvilleHousing`
DROP COLUMN SaleDate;

ALTER TABLE housecleaningproject.`NashvilleHousing`
DROP COLUMN SaleDateConverted;

  


 
 
 
 
 